? read.table
population <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE)
View(population)
subpopulation <- read.table("../2017-02-27_subpopulation_allvars.txt",
header = TRUE)
View(subpopulation)
View(population)
for (i in 1:length(subpopulation$Word.s)) {
# print progress
print(cat("Processing item ", i, " of 285, ",
round((i / length(subpopulation$Word.s) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (subpopulation$Word.s[i] == population$Word.s[j]) {
population <- population[-i, ]
break
}
}
}
str(population)
# load in the population of words that the word rep task list was created from
population <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE, stringsAsFactors = FALSE)
# load in the subpopulation of words including in the word rep task list
subpopulation <- read.table("../2017-02-27_subpopulation_allvars.txt",
header = TRUE, stringsAsFactors = FALSE)
str(population)
for (i in 1:length(subpopulation$Word.s)) {
# print progress
print(cat("Processing item ", i, " of 285, ",
round((i / length(subpopulation$Word.s) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (subpopulation$Word.s[i] == population$Word.s[j]) {
population <- population[-i, ]
break
}
}
}
# load in the population of words that the word rep task list was created from
population <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE, stringsAsFactors = FALSE)
# load in the subpopulation of words including in the word rep task list
subpopulation <- read.table("../2017-02-27_subpopulation_allvars.txt",
header = TRUE, stringsAsFactors = FALSE)
for (i in 1:length(subpopulation$Word.s)) {
# print progress
print(cat("Processing item ", i,
round((i / length(subpopulation$Word.s) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (subpopulation$Word.s[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
write.table(population, "../extra_words.txt")
badwords <- read.csv("../2017-03-28_badwords_from_stimuli.csv", header = TRUE)
View(badwords)
population <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE, stringsAsFactors = FALSE)
for (i in 1:length(badwords$Word)) {
# print progress
print("Processing item ", i, " of ", length(badwords$Word), ","
round((i / length(badwords$Word) * 100), 3),
"% completed")
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (badwords$Word[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
# loop over subpopulation list
for (i in 1:length(badwords$Word)) {
# print progress
print(cat("Processing item ", i, " of ", length(badwords$Word), ","
round((i / length(badwords$Word) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (badwords$Word[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
for (i in 1:length(badwords$Word)) {
# print progress
print(cat("Processing item ", i, " of ", length(badwords$Word), ","
round((i / length(badwords$Word) * 100), 3),
"% completed")
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (badwords$Word[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
# loop over subpopulation list
for (i in 1:length(badwords$Word)) {
# print progress
cat("Processing item ", i, " of ", length(badwords$Word), ","
round((i / length(badwords$Word) * 100), 3),
"% completed")
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (badwords$Word[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
for (i in 1:length(subpopulation$Word.s)) {
# print progress
print(cat("Processing item ", i,
round((i / length(subpopulation$Word.s) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (subpopulation$Word.s[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
population <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE, stringsAsFactors = FALSE)
names(badwords)
for (i in 1:length(badwords$Word)) {
# print progress
print(cat("Processing item ", i,
round((i / length(badwords$Word) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (badwords$Word[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
oldpopulation <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE, stringsAsFactors = FALSE)
1941-1813
rm(oldpopulation)
population <- read.table("../2017-02-27_updated_population_allvars_lemmatized_manualcheck.txt",
header = TRUE, stringsAsFactors = FALSE)
badwords <- read.csv("../2017-03-28_badwords_from_stimuli.csv", header = TRUE)
for (i in 1:length(badwords$Word)) {
# print progress
print(cat("Processing item ", i,
round((i / length(badwords$Word) * 100), 3),
"% completed"))
# look for subpop word in population list, remove if present
for (j in 1:length(population$Word.s)) {
if (badwords$Word[i] == population$Word.s[j]) {
population <- population[-j, ]
break
}
}
}
1941-1827
View(population)
population$cond <- cat(population$Zipfvalue_cat.s, population$cmu_sylls.f)
View(population)
? table()
names(population)
table <- table(population$cmu_sylls.f, population$Zipfvalue_cat.s, data = population)
table(population$cmu_sylls.f, population$Zipfvalue_cat.s, data = population)
table(population$cmu_sylls.f, population$Zipfvalue_cat.s)
table(population$Zipfvalue_cat.s)
table(population$cmu_sylls.f)
