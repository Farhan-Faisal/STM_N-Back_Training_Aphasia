library(openxlsx)
list.files("./data")
sheet = 1)
subtlexus <- read.xlsx("./data/SUBTLEX-US frequency list with PoS and Zipf information.xlsx",
sheet = 1)
names(subtlexus)
nouns <- subtlexus[, which(subtlexus$Dom_PoS_SUBTLEX == "Noun" &
subtlexus$All_PoS_SUBTLEX == "Noun")]
nouns <- subtlexus[ which(subtlexus$Dom_PoS_SUBTLEX == "Noun" &
subtlexus$All_PoS_SUBTLEX == "Noun"), ]
View(nouns)
verbs <- subtlexus[which(subtlexus$Dom_PoS_SUBTLEX == "Verb" &
subtlexus$All_PoS_SUBTLEX == "Verb"), ]
View(verbs)
nounsandverbs <- cbind(nouns, verbs)
nounsandverbs <- rbind(nouns, verbs)
View(nounsandverbs)
write.xlsx(nounsandverbs, file = "subtlexus_nounsandverbs.xlsx")
installr::install.rtools()
Sys.getenv("R_ZIPCMD", "zip")
write.xlsx(nounsandverbs, file = "subtlexus_nounsandverbs.xlsx")
installr::install.rtools()
install.packages("installr")
installr::install.rtools()
write.xlsx(nounsandverbs, file = "subtlexus_nounsandverbs.xlsx")
write.csv(nounsandverbs, file = "subtlexus_nounsandverbs.csv")
cmudict <- read.delim("./cmudict-0.txt")
head(cmudict)
cmudict <- read.delim("./cmudict-edited.txt")
View(cmudict)
cmudict <- read.table("./cmudict-edited.txt")
View(cmudict)
cmudict <- read.table("./cmudict-edited.txt", header = FALSE)
View(cmudict)
cmudict <- read.delim("./cmudict-edited.txt", header = FALSE, sep = ' ')
View(cmudict)
? read.delim
View(cmudict)
library(dplyr)
library(tidyr)
install.packages(c("dplyr", "tidyr"))
library(dplyr)
library(tidyr)
cmudict <- read.delim("./cmudict-edited.txt", header = FALSE)
View(cmudict)
cmudict %>% separate(V1, " ")
cmudictsep <- cmudict %>% separate(V1, " ")
View(cmudict)
View(cmudictsep)
View(cmudictsep)
cmudictsep <- cmudict %>% separate(V1)
cmudictsep <- cmudict %>% separate(V1, " ")
View(cmudictsep)
? separate
cmudictsep <- cmudict %>% separate(V1, into = c("Word", "pronunciation"),
sep = 1)
View(cmudictsep)
sep = " ", extra = "drop", fill = "right")
cmudictsep <- cmudict %>% separate(V1, into = c("Word", "pronunciation"),
sep = " ", extra = "drop", fill = "right")
View(cmudictsep)
cmudictsep <- cmudict %>% separate(V1, into = c("Word", "pronunciation"),
sep = " ")
View(cmudictsep)
cmudictsep <- cmudict %>% separate(V1, into = c("Word", "pronunciation"),
sep = " ", extra = "merge", fill = "right")
View(cmudictsep)
cmudictsep <- cmudict %>% separate(V1, into = c("Word", "pronunciation"),
sep = " ")
View(cmudictsep)
cmudictsep <- cmudict %>% separate(V1, into = c("Word", "pronunciation"),
sep = " ", extra = "merge", fill = "right")
View(cmudictsep)
View(cmudictsep)
write.csv(cmudictsep, file = "cmudict.csv")
cmudictsep <- cmudict %>% separate(V1, into = c("word", "pronunciation"),
sep = " ", extra = "merge", fill = "right")
write.csv(cmudictsep, file = "cmudict.csv")
cmudict <- cmudictsep
rm(cmudictsep)
? gsub
length(gregexpr("[0-9]", 1))
length(gregexpr("[0-9]", head(cmudict)))
head(cmudict)
try <- cmudict[1:6, ]
length(gregexpr("[0-9]", try)
length(gregexpr("[0-9]", try))
length(gregexpr("[0-9]", try$pronunciation))
length(gregexpr("[0-9]", try[1,1]))
length(gregexpr("[0-9]", try[1,2]))
length(gregexpr("[0-9]", try))
try
length(gregexpr("[0-9]", try$pronunciation[1]))
length(gregexpr("[0-9]", cmudict$pronunciation[12]))
what <- gregexpr("[0-9]", cmudict$pronunciation[12])
what
matches <- regmatches(cmudict, gregexpr("[[:digit:]]+", cmudict$pronunciation[12]))
?regmatches
matches <- regmatches(cmudict, gregexpr("[[:digit:]]+", cmudict$pronunciation))
as.numeric(unlist(matches))
matches <- regmatches(cmudict$pronunciation,
gregexpr("[[:digit:]]+", cmudict$pronunciation))
as.numeric(unlist(matches))
what <- as.numeric(unlist(matches))
gregexpr("[[:digit:]]+", cmudict$pronunciation[1])
gregexpr("[[:digit:]]", cmudict$pronunciation[1])
? grep
try <- cmudict[1:20, ]
View(try)
rm(matches)
rm(what)
what <- as.numeric(unlist(regmatches(try$pronunciation[7],
gregexpr("[0-9]", try$pronunciation))))
what <- as.numeric(unlist(regmatches(try$pronunciation[7],
gregexpr("[0-9]", try$pronunciation[7]))))
what
what <- length(as.numeric(unlist(regmatches(try$pronunciation[7],
gregexpr("[0-9]",
try$pronunciation[7])))))
what <- as.numeric(length(unlist(regmatches(try$pronunciation[7], gregexpr("[0-9]", try$pronunciation[7])))))
what
cmudict <- cbind(cmudict, syllables = NULL)
? as.vector
cmudict <- cbind(cmudict, as.vector(syllables, length = length(cmudict)))
cmudict <- cbind(cmudict, as.vector(syllables,
length = as.numeric(length(cmudict))))
cmudict <- cbind(cmudict, as.vector(x = syllables,
length = as.numeric(length(cmudict))))
cmudict <- cbind(cmudict, as.vector(x = syllables,
length = as.numeric(length(cmudict$word))))
length(cmudict)
length(cmudict$word)
cmudict <- cbind(cmudict, as.vector(x = syllables,
length = (length(cmudict$word)))
cmudict <- cbind(cmudict, as.vector(x = syllables,
length = (length(cmudict$word))))
cmudict <- cbind(cmudict, as.vector(x = syllables,
length = (length(cmudict$word))))
cmudict$syllables <- NULL
View(cmudict)
cmudict[, "syllables"] <- NA
View(cmudict)
View(cmudict)
for (i in length(cmudict$pronunciation)) {
syllnum <- as.numeric(length(unlist(regmatches(cmudict$pronunciation[i],
gregexpr("[0-9]",
cmudict$pronunciation[i])))))
cmudict$syllables[i] <- syllnum
}
View(cmudict)
for (i in 1:length(cmudict$pronunciation)) {
syllnum <- as.numeric(length(unlist(regmatches(cmudict$pronunciation[i],
gregexpr("[0-9]",
cmudict$pronunciation[i])))))
cmudict$syllables[i] <- syllnum
}
write.csv(cmudict, file = "cmudict_syllables.csv")
? tolower
cmudict$word <- tolower(cmudict$word)
View(cmudict)
write.csv(cmudict, file = "cmudict_syllables.csv")
goodnounsandverbs <- subset(nounsandverbs, nchar(Word) >= 3 & nchar(Word) <= 10)
numsylls <- read.delim("./n-watch_numsylls.txt")
goodnounsandverbs <- cbind(goodnounsandverbs, syllables = numsylls$LEN_S)
numsylls <- numsylls[1:29959, ]
goodnounsandverbs <- cbind(goodnounsandverbs, syllables = numsylls$LEN_S)
goodnounsandverbs$syllables <- as.character(goodnounsandverbs$syllables)
goodnounsandverbs$syllables <- as.numeric(goodnounsandverbs$syllables)
goodnounsandverbs[, "cmu_syllss"] <- NA
names(goodnounsandverbs)
View(try)
for (i in 1:length(goodnounsandverbs$pronunciation)) {
for (j in 1:length(cmudict$word)) {
if (goodnounsandverbs$Word[i] == cmudict$word[j]) {
syllnum <- cmudict$syllables[j]
goodnounsandverbs$cmu_syllss[i] <- syllnum
break
}
}
}
View(goodnounsandverbs)
View(cmudict)
for (i in 1:length(goodnounsandverbs$Word)) {
for (j in 1:length(cmudict$word)) {
if (goodnounsandverbs$Word[i] == cmudict$word[j]) {
syllnum <- cmudict$syllables[j]
goodnounsandverbs$cmu_syllss[i] <- syllnum
break
}
}
}
View(goodnounsandverbs)
? print
i = 4567
cat(paste0(round(i / length(goodnounsandverbs$Word) * 100), "% completed"))
i = 32045
cat(paste0(round(i / length(goodnounsandverbs$Word) * 100), "% completed"))
match("ignition", goodnounsandverbs$Word)
i = 9628
cat(paste0(round(i / length(goodnounsandverbs$Word) * 100), "% completed"))
i = 622
cat(paste0(round(i / length(goodnounsandverbs$Word) * 100), "% completed"))
? round
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 2, "% completed"))
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 2, "% completed"))
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 2, "% completed")))
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 2), "% completed"))
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 4), "% completed"))
i = 623
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 4), "% completed"))
i = 750
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 4), "% completed"))
i = 767
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 4), "% completed"))
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 3), "% completed"))
i = 786
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 3), "% completed"))
i = 1230
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 3), "% completed"))
i = 1375
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 3), "% completed"))
i = 1765
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 3), "% completed"))
i = 1910
cat(paste0(round((i / length(goodnounsandverbs$Word) * 100), 3), "% completed"))
head(goodnounsandverbs)
rightnounsandverbs <- subset(goodnounsandverbs,
cmu_syllss == 1 | cmu_syllss == 3)
write.csv(rightnounsandverbs,
file = "subtlexus_nounsandverbs_3-10chars_1-3sylls.csv")
write.csv(rightnounsandverbs,
file = "goodwords_1-3sylls.csv")
View(goodnounsandverbs)
rightnounsandverbs <- subset(goodnounsandverbs,
cmu_syllss == 1 | cmu_syllss == 3)
rightnounsandverbs <- subset(goodnounsandverbs, cmu_syllss == 1)
View(rightnounsandverbs)
rightnounsandverbs <- subset(goodnounsandverbs, cmu_syllss == 3)
View(rightnounsandverbs)
View(goodnounsandverbs)
View(goodnounsandverbs)
goodnounsandverbs <- read.csv("goodwords_cmusyllables.csv")
View(goodnounsandverbs)
? read.csv
goodnounsandverbs <- read.csv("goodwords_cmusyllables.csv", row.names = TRUE)
goodnounsandverbs <- read.csv("goodwords_cmusyllables.csv", row.names = 1)
rightnounsandverbs <- subset(goodnounsandverbs,
cmu_syllss == 1 | cmu_syllss == 3)
rightnounsandverbs <- subset(goodnounsandverbs,
cmu_sylls == 1 | cmu_sylls == 3)
write.csv(rightnounsandverbs, file = "goodwords_1-3sylls.csv")
rightnounsandverbs <- subset(goodnounsandverbs,
cmu_sylls == 1 | cmu_sylls == 3)
write.csv(rightnounsandverbs, file = "goodwords_1-3sylls.csv")
lemmasfreq <- read.csv(file = "lemmas_goodwords_1-3sylls.csv")
lemmasorth <- read.txt(file = "lemmas_goodwords_1-3sylls_nwatch-vars.txt")
? read.csv
lemmasorth <- read.table(file = "lemmas_goodwords_1-3sylls_nwatch-vars.txt")
head(lemmasfreq)
names(lemmasfreq)
names(lemmasorth)
lemmasorth <- read.table(file = "lemmas_goodwords_1-3sylls_nwatch-vars.txt", header = TRUE)
names(lemmasorth)
lemmas <- cbind(lemmasfreq, lemmasorth[3:6, ])
lemmas <- cbind(lemmasfreq, lemmasorth[, 3:6])
View(lemmas)
write.csv(lemmas, file = "wordlist.csv")
